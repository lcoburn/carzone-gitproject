1) Create a new project folder

2) Create a new virtual environment. We do this so as not to have to many packages installed. Basically we dont want more libraries than we need
$ virtualenv --version
$ virtualenv venv
$ source venv/bin/activate
Now we are in vistual environment
$ deactivate leaves environment
Now install packages
$ pip install django

3) Create Django project
$ django-admin startproject carzone .
creates main project folder and manage.py script

4) Run package on server
$ python manage.py runserver

5) Create app
$ python manage.py startapp pages

6) Add the app to the settings.py
$ 'pages.app.PagesConfig'
PagesConfig is a class that is in pages/apps.py

7) Set up initial landing page (I find this bit tricky and difficult to understand)
In pages create a file called urls.py. By default there is one existing in the admin pages. Here we will have to app a path to the url we are creating. 
Append the new url to the pathurl list. This adds the urls.py in pages. In urls.py in pages import all views. Add to url pattern list a path to views.home. 
In views.py, in the same folder add a function called home where we return a html called home.html. This html is stored in templates/pages.

8) Create git repo
Create repo oni github
Navigate to folder
$ git init
$ git add -A
$ git commit -m "First commit"
$ git remote add origin https://github.com/lcoburn/carzone-gitproject.git 
$ git push -u origin master
$ git status
$ git add -A
$ git commit -m "Test commit"
$ git push

9) Create a gitignore file in the main repo directory
Go to gitignore.io and type django and hit create
Copy and paste the text to the gitignore

10) Copy html template over 
Project came with a directory full of html and css templates etc
Simply copy over the index.html script content to home.html but nothing works because nothing is installed or setup
Static files in django
Create a subfolder called static in carzone directory
Copy over css, html and image folders across
Register static files in settings.py
At the end of settings add
$ STATIC_ROOT = os.path.join(BASE_DIR, 'static')
$ STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'carzone/static'),
]
Then run manage.py to create a new static subfolder in root directory
$ python manage.py collectstatic
Note: To get help with these commands type
$ python manage.py --help 

Now go back to home.html to use static files
Now type this into CSS library section
$ <link rel="stylesheet" type="text/css" href="(% static 'css/bootstrap.min.css' %)">
Add this to the top of the file (presumably the way we load css libraries ??)
$ (% load static %)
Fix all css paths in the same way and a js path

Next we create a base.html file. The idea is that all pages on the website will have common features. We create a base.html file with these 
common features and then for each other html file we import the base. We do the same for the header, nav bar and footer.

The same process is then repeated more or less from all of the pages in the nav bar: contact about etc.

11) Create Database
Go here for instructions: https://www.youtube.com/watch?v=QaZrWIvAFsA
Ok so I had a lot of issues with this that I dont understand. Basically, I need to download pgadmin and postgres but then I need to install psql with
brew. And then I need to configure the database in postgres so it has the correct port number or the expected port number. I think this is its own topic 
and should be studied in isolation. It's really important to know how to set up a database

open terminal and type:
$ psql
$ \list
create a  database and terminate line with ';'
$ CREATE DATABASE users;
$ \list
$ \connect users;
$ \connect postgres;

PGAdmin is a basically this but better UI
https://www.enterprisedb.com/postgres-tutorials/connecting-postgresql-using-psql-and-pgadmin

In PGAdmin, open 'connection?' luke_macbook. Right click on Login/Group Roles. Creat Login/Group Roles. 
Set Name, Password and Privileges in General, Definition and Privileges. 
Then create a database. Right click on Databases and create Database.
Scroll down to Tables and click create table.
Decide on a table name and make columns
Create columns as you see fit, make first one id and serial.

12) Create a new database for the project. 
New database called carzone_db. 
Add the database to settings.py
Install psycopg2
$ pip install psycopg2==2.8.6 
(I actually had to run this pip install psycopg2-binary==2.8.6 because the other version had some incompatibaility with django to do with the UTC)  
Run migrate command to set up database properly
$ python manage.py makemigrations
And then 
$ python manage.py migrate
Now create superuser
$ python manage.py createsuperuser
Create username, add email and password
$ python manage.py runserver
Now go to http://127.0.0.1:8000/admin and enter login details

13) Now create model in app. This will be to display the team.
The data that is required is: photo, firstname, lastname, designation, facebook_link, google_plus_link, created_date
Got to models.py in pages app
Create class Teams with vars as above
Because we are using pillow
$ pip install pillow
Now run another migration (Every time you make a change in models you have to run these 2 commands)
$ python manage.py makemigrations
$ python manage.py migrate
Register model in admin file by adding:
$ admin.site.register(Teams)
Go to admin again and go to teams and add ateam member
Can create a team mdemeber but need to set media settings in django
If you add a class var in models and then start migration you will get an error. Select option 1 and add a string value. Easy
Add a new class method called __str__ that return the first_name var and do migration

